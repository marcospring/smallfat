<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schemia/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">




    <import resource="classpath*:spring/applicationContext-base.xml"/>
    <import resource="classpath*:spring/applicationContext-redis.xml"/>
    <import resource="classpath*:spring/applicationContext-dataSource.xml"/>


    <context:annotation-config/>
    <context:component-scan base-package="com.smt.smallfat"/>
    <context:property-placeholder location="classpath:properties/*.properties" ignore-unresolvable="true"/>

    <!-- MySQL读库 -->
    <bean id="sqlSessionFactoryRead" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRead"/>
        <!--  <property name="configLocation" value="classpath:/sqlmap/sqlmap-config.xml"/> -->
        <!-- 自动扫描目录下的所有SQL映射的xml文件 -->
        <property name="mapperLocations" value="classpath:sqlmap/*/*.xml" />
        <property name="configLocation" value="classpath:spring/mybatis-config.xml" />
    </bean>
    <!-- MySQL写库 -->
    <bean id="sqlSessionFactoryWrite" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceWrite"/>
        <!--  <property name="configLocation" value="classpath:/sqlmap/sqlmap-config.xml"/> -->
        <!-- 自动扫描目录下的所有SQL映射的xml文件 -->
        <property name="mapperLocations" value="classpath:sqlmap/*/*.xml" />
        <property name="configLocation" value="classpath:spring/mybatis-config.xml" />
    </bean>
    <bean id="restTemple" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8"></constructor-arg>
                </bean>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>

            </list>
        </property>
    </bean>
    <bean id="readAndWriteDataSessionFactory"
          class="com.csyy.core.datasource.impl.cache.DefaultCacheReadAndWriteDataSessionFactory">
        <property name="support" ref="sqlSessionFactorySupport"/>
        <property name="redisSessionFactory" ref="redisFactory"/>
        <property name="defaultDataSource" value="sqlsessionfactory.default"/>
        <property name="readDataSource" value="sqlsessionfactory.read"/>
        <property name="writeDataSource" value="sqlsessionfactory.write"/>
        <property name="systemKey" value="${dataSource.cach.systemKey}"/>
    </bean>



    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceWrite"></property>
    </bean>
    <tx:annotation-driven transaction-manager="txManager"/>

    <bean id="resultMessageListener" class="com.csyy.core.result.ResultMessageListener">
        <property name="resultMessagePath" value="result/result.xml"></property>
    </bean>

    <!-- 线程池-->
    <bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
        <property name ="corePoolSize" value ="20" />
        <property name ="keepAliveSeconds" value ="90000" />
        <property name ="maxPoolSize" value ="500" />
        <property name ="queueCapacity" value ="100" />
    </bean>


</beans>