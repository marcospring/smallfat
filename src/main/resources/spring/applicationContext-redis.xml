<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <context:property-placeholder location="classpath:/properties/redis.properties" ignore-unresolvable="true" />
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"/>
    </bean>

    <!-- redis的单点连接池pool，不是必选项：timeout/password  -->
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <!--timeout-->
        <constructor-arg index="3" value="${redis.timeout}"/>
        <!--<constructor-arg index="4" value="${redis.password}"/>-->
        <!--<constructor-arg index="5" value="${redis.database}"/>-->
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        <property name="hostName" value="${redis.host}"></property>
        <property name="port" value="${redis.port}"></property>
        <!--<property name="password" value="0123456"></property>-->
        <property name="timeout" value="15000"></property>
        <property name="usePool" value="true"></property>
    </bean>

    <bean id="topicMessageListener" class="com.smt.smallfat.utils.TopicMessageListener">
        <property name="orderService" ref="orderServiceImpl"/>
    </bean>

    <bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer" destroy-method="destroy">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="taskExecutor"><!-- 此处有个奇怪的问题，无法正确使用其他类型的Executor -->
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="3"></property>
            </bean>
        </property>
        <property name="messageListeners">
            <map>
                <entry key-ref="topicMessageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="__keyevent@0__:expired"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    <!--redis哨兵集群模式连接池-->
    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisSentinelPool">-->
    <!--<constructor-arg name="masterName" value="${redis.sentinel.mastername}"/>-->
    <!--<constructor-arg name="sentinels">-->
    <!--<set>-->
    <!--<value>${redis.sentinel.sentinel.A}</value>-->
    <!--<value>${redis.sentinel.sentinel.B}</value>-->
    <!--<value>${redis.sentinel.sentinel.C}</value>-->
    <!--</set>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>-->
    <!--<constructor-arg name="timeout" value="${redis.timeout}"/>-->
    <!--</bean>-->

    <bean id="redisFactory" class="com.csyy.redis.jedis.factory.JedisSimpleSessionFactory">
        <property name="pool" ref="jedisPool"/>
    </bean>
    <!--分布式锁-->
    <bean class="com.csyy.redis.utils.lock.DelegateDistributedLock">
        <property name="factory" ref="redisFactory"/>
    </bean>

    <!--codis配置-->
    <!--<bean name="cacheclinet" class="com.nonobank.architecture.cache.CacheClient">-->
    <!--<constructor-arg  ref="codisconfig" />-->
    <!--</bean>-->
    <!--<bean name="codisconfig" class="com.nonobank.architecture.cache.CacheConfig">-->
    <!--<property name="maxTotal" value="${codis.pool.maxTotal}"/>-->
    <!--<property name="maxIdle" value="${codis.pool.maxIdle}"/>-->
    <!--<property name="minIdle" value="${codis.pool.minIdle}"/>-->
    <!--<property name="maxWaitMillis" value="${codis.pool.maxWaitMillis}"/>-->
    <!--<property name="zkAddressAndPort" value="${codis.zk.zkAddressAndPort}"/>-->
    <!--<property name="zkSessionTimeOutMs" value="${codis.zk.zkSessionTimeOutMs}"/>-->
    <!--<property name="zkProxyDir" value="${codis.zk.zkProxyDir}"/>-->
    <!--<property name="debug" value="${codis.debug}"/>-->
    <!--<property name="envrionment" value="${codis.envrionment}"/>-->
    <!--</bean>-->

    <!--<bean id="redisFactory" class="com.csyy.redis.codis.factory.CodisSessinoFactory">-->
    <!--<property name="pool" ref="jedisPool"/>-->
    <!--<property name="client" ref="cacheclinet"/>-->
    <!--</bean>-->

</beans>

