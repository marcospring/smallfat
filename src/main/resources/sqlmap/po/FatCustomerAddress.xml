<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="FatCustomerAddress">
	<sql id="baseColumnList">
			u.id as id ,
			u.disabled as disabled ,
			u.uuid as uuid ,
			u.create_user as createUser ,
			u.create_time as createTime ,
			u.update_user as updateUser ,
			u.update_time as updateTime ,
			u.remark as remark ,
			u.order_by as orderBy ,
			u.receive_name as receiveName ,
			u.mobile_number as mobileNumber ,
			u.area_address as areaAddress ,
			u.address as address ,
			u.is_default as isDefault ,
			u.user_id as userId ,
			u.area_code as areaCode 
	</sql>
	<sql id="searchCriteria">
		<if test="id != null">
			and u.id = #{id,jdbcType=NUMERIC}
		</if>
		<if test="disabled != null">
			and u.disabled = #{disabled,jdbcType=NUMERIC}
		</if>
		<if test="uuid != null">
			and u.uuid = #{uuid,jdbcType=VARCHAR}
		</if>
		<if test="uuidLike != null">
			and u.uuid like CONCAT('%',#{uuidLike,jdbcType=VARCHAR},'%') 
		</if>
		<if test="createUser != null">
			and u.create_user = #{createUser,jdbcType=NUMERIC}
		</if>
		<if test="createTime != null">
			and u.create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateUser != null">
			and u.update_user = #{updateUser,jdbcType=NUMERIC}
		</if>
		<if test="updateTime != null">
			and u.update_time = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="remark != null">
			and u.remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="remarkLike != null">
			and u.remark like CONCAT('%',#{remarkLike,jdbcType=VARCHAR},'%') 
		</if>
		<if test="orderBy != null">
			and u.order_by = #{orderBy,jdbcType=NUMERIC}
		</if>
		<if test="receiveName != null">
			and u.receive_name = #{receiveName,jdbcType=VARCHAR}
		</if>
		<if test="receiveNameLike != null">
			and u.receive_name like CONCAT('%',#{receiveNameLike,jdbcType=VARCHAR},'%') 
		</if>
		<if test="mobileNumber != null">
			and u.mobile_number = #{mobileNumber,jdbcType=VARCHAR}
		</if>
		<if test="mobileNumberLike != null">
			and u.mobile_number like CONCAT('%',#{mobileNumberLike,jdbcType=VARCHAR},'%') 
		</if>
		<if test="areaAddress != null">
			and u.area_address = #{areaAddress,jdbcType=VARCHAR}
		</if>
		<if test="areaAddressLike != null">
			and u.area_address like CONCAT('%',#{areaAddressLike,jdbcType=VARCHAR},'%') 
		</if>
		<if test="address != null">
			and u.address = #{address,jdbcType=VARCHAR}
		</if>
		<if test="addressLike != null">
			and u.address like CONCAT('%',#{addressLike,jdbcType=VARCHAR},'%') 
		</if>
		<if test="isDefault != null">
			and u.is_default = #{isDefault,jdbcType=NUMERIC}
		</if>
		<if test="userId != null">
			and u.user_id = #{userId,jdbcType=NUMERIC}
		</if>
		<if test="areaCode != null">
			and u.area_code = #{areaCode,jdbcType=VARCHAR}
		</if>
		<if test="areaCodeLike != null">
			and u.area_code like CONCAT('%',#{areaCodeLike,jdbcType=VARCHAR},'%') 
		</if>
	</sql>

	<!-- 查询列表数据 -->
	<select id="queryListResult" parameterType="map" resultType="FatCustomerAddress">
		select
			<include refid="baseColumnList" />
		from
			FAT_CUSTOMER_ADDRESS u
		where
		    u.disabled = 0
			<include refid="searchCriteria" />
			<include refid="Util.orderCriteria" />
			<include refid="Util.mysqlPage" />
	</select>
	<select id="queryListResultCount" parameterType="map" resultType="long">
		select
			count(u.id)
		from
			FAT_CUSTOMER_ADDRESS u
		where
		    u.disabled = 0
		<include refid="searchCriteria" />
	</select>
	<!-- 自定义查询列表where条件 -->
	<select id="queryListResultByWhere" parameterType="java.util.Map" statementType="STATEMENT" resultType="FatCustomerAddress">
		select
			<include refid="baseColumnList" />
		from
			FAT_CUSTOMER_ADDRESS u
		where
		    u.disabled = 0 
		    <if test="whereSqlStr != null">
			AND ${whereSqlStr}
			</if>
	</select>
	<select id="queryListResultCountByWhere" parameterType="java.util.Map" statementType="STATEMENT" resultType="long">
		select
			count(u.id)
		from
			FAT_CUSTOMER_ADDRESS u
		where
		    u.disabled = 0 
			<if test="whereSqlStr != null">
			AND ${whereSqlStr}
			</if>
	</select>
	
	<!-- 查询一条数据 -->
	<select id="querySingleResultById" parameterType="int" resultType="FatCustomerAddress">
		select
			<include refid="baseColumnList" />
		from
			FAT_CUSTOMER_ADDRESS u
		where
		    u.disabled = 0
			and u.ID = #{id,jdbcType=NUMERIC}
	</select>
	
	<select id="querySingleResultByUUID" parameterType="String" resultType="FatCustomerAddress">
		select
			<include refid="baseColumnList" />
		from
			FAT_CUSTOMER_ADDRESS u
		where
			    u.disabled = 0
			and u.uuid = #{uuid,jdbcType=VARCHAR}
	</select>
	<select id="querySingleResultByParams" parameterType="map" resultType="FatCustomerAddress">
		select
			<include refid="baseColumnList" />
		from
			FAT_CUSTOMER_ADDRESS u
		where
			u.disabled = 0
			<include refid="searchCriteria" />
	</select>

	<insert id="save" parameterType="FatCustomerAddress" useGeneratedKeys="true" keyProperty="id">
		insert into FAT_CUSTOMER_ADDRESS(
			disabled,
			uuid,
			create_user,
			create_time,
			update_user,
			update_time,
			remark,
			order_by,
			receive_name,
			mobile_number,
			area_address,
			address,
			is_default,
			user_id,
			area_code
		)values(
			#{disabled,jdbcType=NUMERIC},
			#{uuid,jdbcType=VARCHAR},
			#{createUser,jdbcType=NUMERIC},
			#{createTime,jdbcType=TIMESTAMP},
			#{updateUser,jdbcType=NUMERIC},
			#{updateTime,jdbcType=TIMESTAMP},
			#{remark,jdbcType=VARCHAR},
			#{orderBy,jdbcType=NUMERIC},
			#{receiveName,jdbcType=VARCHAR},
			#{mobileNumber,jdbcType=VARCHAR},
			#{areaAddress,jdbcType=VARCHAR},
			#{address,jdbcType=VARCHAR},
			#{isDefault,jdbcType=NUMERIC},
			#{userId,jdbcType=NUMERIC},
			#{areaCode,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="saveBatch" parameterType="ArrayList">
		insert into FAT_CUSTOMER_ADDRESS(
			disabled,
			uuid,
			create_user,
			create_time,
			update_user,
			update_time,
			remark,
			order_by,
			receive_name,
			mobile_number,
			area_address,
			address,
			is_default,
			user_id,
			area_code
		)values
		<foreach collection="list" item="obj" separator=",">
		(
			#{obj.disabled,jdbcType=NUMERIC},
			#{obj.uuid,jdbcType=VARCHAR},
			#{obj.createUser,jdbcType=NUMERIC},
			#{obj.createTime,jdbcType=TIMESTAMP},
			#{obj.updateUser,jdbcType=NUMERIC},
			#{obj.updateTime,jdbcType=TIMESTAMP},
			#{obj.remark,jdbcType=VARCHAR},
			#{obj.orderBy,jdbcType=NUMERIC},
			#{obj.receiveName,jdbcType=VARCHAR},
			#{obj.mobileNumber,jdbcType=VARCHAR},
			#{obj.areaAddress,jdbcType=VARCHAR},
			#{obj.address,jdbcType=VARCHAR},
			#{obj.isDefault,jdbcType=NUMERIC},
			#{obj.userId,jdbcType=NUMERIC},
			#{obj.areaCode,jdbcType=VARCHAR}
		)
		</foreach>
	</insert>

	<!-- 修改 -->
	<update id="update" parameterType="FatCustomerAddress">
		update FAT_CUSTOMER_ADDRESS u
		<set>
			u.create_time = #{createTime,jdbcType=TIMESTAMP} 
 			<if test="disabled != null">
				,u.disabled=#{disabled,jdbcType=NUMERIC} 
			</if>
 			<if test="updateUser != null">
				,u.update_user=#{updateUser,jdbcType=NUMERIC} 
			</if>
 			<if test="updateTime != null">
				,u.update_time=#{updateTime,jdbcType=TIMESTAMP} 
			</if>
 			<if test="remark != null">
				,u.remark=#{remark,jdbcType=VARCHAR} 
			</if>
 			<if test="orderBy != null">
				,u.order_by=#{orderBy,jdbcType=NUMERIC} 
			</if>
 			<if test="receiveName != null">
				,u.receive_name=#{receiveName,jdbcType=VARCHAR} 
			</if>
 			<if test="mobileNumber != null">
				,u.mobile_number=#{mobileNumber,jdbcType=VARCHAR} 
			</if>
 			<if test="areaAddress != null">
				,u.area_address=#{areaAddress,jdbcType=VARCHAR} 
			</if>
 			<if test="address != null">
				,u.address=#{address,jdbcType=VARCHAR} 
			</if>
 			<if test="isDefault != null">
				,u.is_default=#{isDefault,jdbcType=NUMERIC} 
			</if>
 			<if test="userId != null">
				,u.user_id=#{userId,jdbcType=NUMERIC} 
			</if>
 			<if test="areaCode != null">
				,u.area_code=#{areaCode,jdbcType=VARCHAR} 
			</if>
		</set>
		where
            u.ID = #{id,jdbcType=NUMERIC}
            
	</update>
	<!-- 自定义修改列以及修改条件 -->
	<update id="updateCustomColumnByWhere" parameterType="map" statementType="STATEMENT">
		UPDATE  FAT_CUSTOMER_ADDRESS  ${updateSqlStr}
		where
			${whereSqlStr}
	</update>
	
	<!-- 逻辑删除 -->
	<update id="logicDelete" parameterType="map">
		update FAT_CUSTOMER_ADDRESS u set
		u.DISABLED = 1
		<if test="updateTime != null">
		    ,u.UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateUser != null">
            ,u.UPDATE_USER = #{updateUser,jdbcType=NUMERIC}
		</if>
		where
			<if test="id != null">
				u.ID = #{id,jdbcType=NUMERIC}
			</if>
			<if test="id == null and uuid != null">
				u.uuid = #{uuid,jdbcType=VARCHAR}
			</if>
			<if test="id == null and uuid == null">
				u.id = null
			</if>
	</update>
	<!-- 自定义逻辑条件 -->
	<update id="logicWhereDelete" parameterType="java.util.Map" statementType="STATEMENT">
		update FAT_CUSTOMER_ADDRESS set DISABLED = 1
		where
			${whereSqlStr}
	</update>
	<!-- 物理删除 -->
	<delete id="physicalDelete" parameterType="java.lang.Integer">
		delete from FAT_CUSTOMER_ADDRESS where id=#{id,jdbcType=INTEGER}
	</delete>
	
	<!-- 自定义物理条件 -->
	<delete id="physicalWhereDelete" parameterType="java.util.Map" statementType="STATEMENT">
		DELETE FROM FAT_CUSTOMER_ADDRESS WHERE ${whereSqlStr}
	</delete>
	
	
</mapper>
