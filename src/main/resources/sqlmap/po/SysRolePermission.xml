<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SysRolePermission">
	<sql id="baseColumnList">
			u.id as id ,
			u.disabled as disabled ,
			u.role_id as roleId ,
			u.permission_id as permissionId ,
			u.create_time as createTime 
	</sql>
	<sql id="searchCriteria">
		<if test="id != null">
			and u.id = #{id,jdbcType=NUMERIC}
		</if>
		<if test="disabled != null">
			and u.disabled = #{disabled,jdbcType=NUMERIC}
		</if>
		<if test="roleId != null">
			and u.role_id = #{roleId,jdbcType=NUMERIC}
		</if>
		<if test="permissionId != null">
			and u.permission_id = #{permissionId,jdbcType=NUMERIC}
		</if>
		<if test="createTime != null">
			and u.create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
	</sql>

	<!-- 查询列表数据 -->
	<select id="queryListResult" parameterType="map" resultType="SysRolePermission">
		select
			<include refid="baseColumnList" />
		from
			SYS_ROLE_PERMISSION u
		where
		    u.disabled = 0
			<include refid="searchCriteria" />
			<include refid="Util.orderCriteria" />
			<include refid="Util.mysqlPage" />
	</select>
	<select id="queryListResultCount" parameterType="map" resultType="long">
		select
			count(u.id)
		from
			SYS_ROLE_PERMISSION u
		where
		    u.disabled = 0
		<include refid="searchCriteria" />
	</select>
	<!-- 自定义查询列表where条件 -->
	<select id="queryListResultByWhere" parameterType="java.util.Map" statementType="STATEMENT" resultType="SysRolePermission">
		select
			<include refid="baseColumnList" />
		from
			SYS_ROLE_PERMISSION u
		where
		    u.disabled = 0 
		    <if test="whereSqlStr != null">
			AND ${whereSqlStr}
			</if>
	</select>
	<select id="queryListResultCountByWhere" parameterType="java.util.Map" statementType="STATEMENT" resultType="long">
		select
			count(u.id)
		from
			SYS_ROLE_PERMISSION u
		where
		    u.disabled = 0 
			<if test="whereSqlStr != null">
			AND ${whereSqlStr}
			</if>
	</select>
	
	<!-- 查询一条数据 -->
	<select id="querySingleResultById" parameterType="int" resultType="SysRolePermission">
		select
			<include refid="baseColumnList" />
		from
			SYS_ROLE_PERMISSION u
		where
		    u.disabled = 0
			and u.ID = #{id,jdbcType=NUMERIC}
	</select>
	
	<select id="querySingleResultByParams" parameterType="map" resultType="SysRolePermission">
		select
			<include refid="baseColumnList" />
		from
			SYS_ROLE_PERMISSION u
		where
			u.disabled = 0
			<include refid="searchCriteria" />
	</select>

	<insert id="save" parameterType="SysRolePermission" useGeneratedKeys="true" keyProperty="id">
		insert into SYS_ROLE_PERMISSION(
			disabled,
			role_id,
			permission_id,
			create_time
		)values(
			#{disabled,jdbcType=NUMERIC},
			#{roleId,jdbcType=NUMERIC},
			#{permissionId,jdbcType=NUMERIC},
			#{createTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="saveBatch" parameterType="ArrayList">
		insert into SYS_ROLE_PERMISSION(
			disabled,
			role_id,
			permission_id,
			create_time
		)values
		<foreach collection="list" item="obj" separator=",">
		(
			#{obj.disabled,jdbcType=NUMERIC},
			#{obj.roleId,jdbcType=NUMERIC},
			#{obj.permissionId,jdbcType=NUMERIC},
			#{obj.createTime,jdbcType=TIMESTAMP}
		)
		</foreach>
	</insert>

	<!-- 修改 -->
	<update id="update" parameterType="SysRolePermission">
		update SYS_ROLE_PERMISSION u
		<set>
			u.create_time = #{createTime,jdbcType=TIMESTAMP} 
			<if test="disabled != null">
				,u.disabled=#{disabled,jdbcType=NUMERIC} 
			</if>
			<if test="roleId != null">
				,u.role_id=#{roleId,jdbcType=NUMERIC} 
			</if>
			<if test="permissionId != null">
				,u.permission_id=#{permissionId,jdbcType=NUMERIC} 
			</if>
		</set>
		where
            u.ID = #{id,jdbcType=NUMERIC}
            
	</update>
	<!-- 自定义修改列以及修改条件 -->
	<update id="updateCustomColumnByWhere" parameterType="map" statementType="STATEMENT">
		UPDATE  SYS_ROLE_PERMISSION  ${updateSqlStr}
		where
			${whereSqlStr}
	</update>
	
	<!-- 逻辑删除 -->
	<update id="logicDelete" parameterType="map">
		update SYS_ROLE_PERMISSION u set
		u.DISABLED = 1
		<if test="updateTime != null">
		    ,u.UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateUser != null">
            ,u.UPDATE_USER = #{updateUser,jdbcType=NUMERIC}
		</if>
		where
			<if test="id != null">
				u.ID = #{id,jdbcType=NUMERIC}
			</if>
	</update>
	<!-- 自定义逻辑条件 -->
	<update id="logicWhereDelete" parameterType="java.util.Map" statementType="STATEMENT">
		update SYS_ROLE_PERMISSION set DISABLED = 1
		where
			${whereSqlStr}
	</update>
	<!-- 物理删除 -->
	<delete id="physicalDelete" parameterType="java.lang.Integer">
		delete from SYS_ROLE_PERMISSION where id=#{id,jdbcType=INTEGER}
	</delete>
	
	<!-- 自定义物理条件 -->
	<delete id="physicalWhereDelete" parameterType="java.util.Map" statementType="STATEMENT">
		DELETE FROM SYS_ROLE_PERMISSION WHERE ${whereSqlStr}
	</delete>
	
	
</mapper>
